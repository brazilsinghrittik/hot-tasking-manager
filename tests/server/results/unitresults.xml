<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="133" errors="32" failures="2" skip="0"><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_partial_translation_uses_default_trans_for_empty_fields" time="0.910"><error type="sqlalchemy.exc.IntegrityError" message="(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;shapely.geos: DEBUG: Found GEOS DLL: &lt;CDLL '/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/shapely/.dylibs/libgeos_c.1.dylib', handle 7fbe2b0e7900 at 0x110b81890&gt;, using it.&#10;shapely.geos: DEBUG: Trying `CDLL(/usr/lib/libc.dylib)`&#10;shapely.geos: DEBUG: Library path: '/usr/lib/libc.dylib'&#10;shapely.geos: DEBUG: DLL: &lt;CDLL '/usr/lib/libc.dylib', handle 10e4f9850 at 0x110b95b50&gt;&#10;shapely.speedups._speedups: INFO: Numpy was not imported, continuing without requires()&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 153, in reraise
    raise value
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1084, in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj)
-------------------- >> begin captured logging << --------------------
shapely.geos: DEBUG: Found GEOS DLL: <CDLL '/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/shapely/.dylibs/libgeos_c.1.dylib', handle 7fbe2b0e7900 at 0x110b81890>, using it.
shapely.geos: DEBUG: Trying `CDLL(/usr/lib/libc.dylib)`
shapely.geos: DEBUG: Library path: '/usr/lib/libc.dylib'
shapely.geos: DEBUG: DLL: <CDLL '/usr/lib/libc.dylib', handle 10e4f9850 at 0x110b95b50>
shapely.speedups._speedups: INFO: Numpy was not imported, continuing without requires()
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_project_can_be_cloned" time="0.159"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_project_can_be_generated_as_dto" time="0.148"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_project_can_be_persisted_to_db" time="0.149"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_task_can_generate_valid_feature_collection" time="0.151"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_project.TestProject" name="test_update_project_adds_project_info" time="0.149"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/models/postgis/test_project.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 13, 334215), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 13, 334236)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.models.postgis.test_user.TestUser" name="test_as_dto_will_not_return_email_if_not_owner" time="0.147"></testcase><testcase classname="tests.server.integration.models.postgis.test_user.TestUser" name="test_as_dto_will_not_return_email_if_owner" time="0.163"></testcase><testcase classname="tests.server.integration.services.grid.test_split_service.TestSplitService" name="test_split_geom_raise_grid_service_error_when_task_not_usable" time="0.182"><error type="sqlalchemy.exc.IntegrityError" message="(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/grid/test_split_service.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 153, in reraise
    raise value
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1084, in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]
(Background on this error at: http://sqlalche.me/e/gkpj)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.grid.test_split_service.TestSplitService" name="test_split_geom_returns_split_geometries" time="0.163"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/grid/test_split_service.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.grid.test_split_service.TestSplitService" name="test_split_non_square_task" time="0.148"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/grid/test_split_service.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.grid.test_split_service.TestSplitService" name="test_split_task_helper" time="0.145"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/grid/test_split_service.py", line 41, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.messaging.test_messaging_service.TestMessageService" name="test_welcome_message_sent" time="0.153"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/messaging/test_messaging_service.py", line 30, in setUp
    self.test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 14, 621072), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 14, 621087)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.messaging.test_smtp_service.TestStatsService" name="test_alert_not_sent_if_email_not_supplied" time="0.207"></testcase><testcase classname="tests.server.integration.services.messaging.test_smtp_service.TestStatsService" name="test_email_verification_url_generated_correctly" time="0.153"></testcase><testcase classname="tests.server.integration.services.messaging.test_smtp_service.TestStatsService" name="test_send_alert" time="0.150"></testcase><testcase classname="tests.server.integration.services.messaging.test_smtp_service.TestStatsService" name="test_send_alert_message_limits" time="0.149"></testcase><testcase classname="tests.server.integration.services.messaging.test_smtp_service.TestStatsService" name="test_send_verification_mail" time="0.161"></testcase><testcase classname="tests.server.integration.services.users.test_authentication_service.TestAuthenticationService" name="test_existing_user_changed_name" time="0.199"></testcase><testcase classname="tests.server.integration.services.users.test_authentication_service.TestAuthenticationService" name="test_unknown_user_creates_user_in_db" time="0.192"></testcase><testcase classname="tests.server.integration.services.users.test_user_service.TestAuthenticationService" name="test_mapper_level_updates_correctly" time="0.176"><error type="sqlalchemy.exc.IntegrityError" message="(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/users/test_user_service.py", line 39, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 153, in reraise
    raise value
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1084, in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.users.test_user_service.TestAuthenticationService" name="test_set_level_adds_level_to_user" time="0.157"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/users/test_user_service.py", line 39, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.users.test_user_service.TestAuthenticationService" name="test_upsert_inserts_project_if_not_exists" time="0.157"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/users/test_user_service.py", line 39, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.users.test_user_service.TestAuthenticationService" name="test_user_can_register_with_correct_mapping_level" time="0.159"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/users/test_user_service.py", line 39, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_favorite_service.TestFavoriteService" name="test_project_favorite" time="0.154"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_favorite_service.py", line 29, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_featured_projects_services.TestFeaturedProjectService" name="test_featured_projects_service" time="0.155"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_featured_projects_services.py", line 28, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_interests_service.TestInterestService" name="test_interests" time="0.155"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_interests_service.py", line 31, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_license_service.TestLicenseService" name="test_license_crud_works_as_expected" time="0.152"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 628, in run
    testMethod()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_license_service.py", line 43, in test_license_crud_works_as_expected
    license_id = LicenseService.create_licence(license_dto)
  File "/Users/ramyaragupathy/Github/tasking-manager/server/services/license_service.py", line 29, in create_licence
    new_licence_id = License.create_from_dto(license_dto)
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/licenses.py", line 43, in create_from_dto
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 16, 633971), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 16, 633987)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_gpx_xml_file_generated_correctly" time="0.173"><error type="sqlalchemy.exc.IntegrityError" message="(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 153, in reraise
    raise value
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1084, in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_gpx_xml_file_generated_correctly_all_tasks" time="0.161"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_map_all_sets_counters_correctly" time="0.148"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_mapped_by_is_set_after_mapping_all" time="0.218"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_osm_xml_file_generated_correctly" time="0.153"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_mapping_service.TestMappingService" name="test_osm_xml_file_generated_correctly_all_tasks" time="0.155"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_mapping_service.py", line 33, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 17, 906249), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 17, 906264)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_project_search_service.TestProjectSearchService" name="test_get_area_from_3857_bbox" time="0.261"><failure type="builtins.AssertionError" message="28276407740.27955 != 28276407740.2797&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 628, in run
    testMethod()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_project_search_service.py", line 150, in test_get_area_from_3857_bbox
    self.assertEqual(expected, 28276407740.2797)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
28276407740.27955 != 28276407740.2797
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></failure></testcase><testcase classname="tests.server.integration.services.test_project_search_service.TestProjectSearchService" name="test_get_intersecting_projects" time="0.209"></testcase><testcase classname="tests.server.integration.services.test_project_search_service.TestProjectSearchService" name="test_make_polygon_from_3857_bbox" time="0.272"><failure type="builtins.AssertionError" message="Tuples differ: (32.50198296132938, -12.59912449955007, 34.68826225820438, -11.578583176891955) != (32.50198296132938, -12.599124499550062, 34.68826225820438, -11.578583176891959)&#10;&#10;First differing element 1:&#10;-12.59912449955007&#10;-12.599124499550062&#10;&#10;- (32.50198296132938, -12.59912449955007, 34.68826225820438, -11.578583176891955)&#10;?                                      ^                                       ^&#10;&#10;+ (32.50198296132938, -12.599124499550062, 34.68826225820438, -11.578583176891959)&#10;?                                      ^^                                       ^&#10;&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 628, in run
    testMethod()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_project_search_service.py", line 125, in test_make_polygon_from_3857_bbox
    self.assertEqual(expected, polygon.bounds)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 1069, in assertTupleEqual
    self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 1040, in assertSequenceEqual
    self.fail(msg)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 693, in fail
    raise self.failureException(msg)
Tuples differ: (32.50198296132938, -12.59912449955007, 34.68826225820438, -11.578583176891955) != (32.50198296132938, -12.599124499550062, 34.68826225820438, -11.578583176891959)

First differing element 1:
-12.59912449955007
-12.599124499550062

- (32.50198296132938, -12.59912449955007, 34.68826225820438, -11.578583176891955)
?                                      ^                                       ^

+ (32.50198296132938, -12.599124499550062, 34.68826225820438, -11.578583176891959)
?                                      ^^                                       ^

-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></failure></testcase><testcase classname="tests.server.integration.services.test_stats_service.TestStatsService" name="test_homepage_stats_returns_results" time="0.231"><error type="sqlalchemy.exc.IntegrityError" message="(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_stats_service.py", line 29, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 503, in commit
    self._prepare_impl()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 482, in _prepare_impl
    self.session.flush()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2479, in flush
    self._flush(objects)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2617, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 153, in reraise
    raise value
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2577, in _flush
    flush_context.execute()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1084, in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 982, in execute
    return meth(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 293, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    distilled_params,
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1250, in _execute_context
    e, statement, parameters, cursor, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1476, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 152, in reraise
    raise value.with_traceback(tb)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1246, in _execute_context
    cursor, statement, parameters, context
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 588, in do_execute
    cursor.execute(statement, parameters)
(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]
(Background on this error at: http://sqlalche.me/e/gkpj)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_validation_service.TestValidationService" name="test_invalidate_all_sets_counters_correctly" time="0.180"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_validation_service.py", line 30, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_validation_service.TestValidationService" name="test_mapped_by_and_validated_by_are_null_after_invalidating_all" time="0.170"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_validation_service.py", line 30, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_validation_service.TestValidationService" name="test_mapped_by_and_validated_by_is_set_after_validating_all" time="0.159"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_validation_service.py", line 30, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.integration.services.test_validation_service.TestValidationService" name="test_validate_all_sets_counters_correctly" time="0.175"><error type="sqlalchemy.exc.InvalidRequestError" message="This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint &quot;users_pkey&quot;&#10;DETAIL:  Key (id)=(1234) already exists.&#10;&#10;[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]&#10;[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]&#10;(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 624, in run
    self.setUp()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/integration/services/test_validation_service.py", line 30, in setUp
    self.test_project, self.test_user = create_canned_project()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 89, in create_canned_project
    test_user = create_canned_user()
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/helpers/test_helpers.py", line 75, in create_canned_user
    test_user.create()
  File "/Users/ramyaragupathy/Github/tasking-manager/server/models/postgis/user.py", line 80, in create
    db.session.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1036, in commit
    self.transaction.commit()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 501, in commit
    self._assert_active(prepared_ok=True)
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 295, in _assert_active
    code="7s2a",
This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "users_pkey"
DETAIL:  Key (id)=(1234) already exists.

[SQL: INSERT INTO users (id, validation_message, username, role, mapping_level, tasks_mapped, tasks_validated, tasks_invalidated, projects_mapped, email_address, is_email_verified, is_expert, twitter_id, facebook_id, linkedin_id, slack_id, skype_id, irc_id, name, city, country, picture_url, gender, self_description_gender, default_editor, mentions_notifications, comments_notifications, projects_notifications, date_registered, last_validation_date) VALUES (%(id)s, %(validation_message)s, %(username)s, %(role)s, %(mapping_level)s, %(tasks_mapped)s, %(tasks_validated)s, %(tasks_invalidated)s, %(projects_mapped)s, %(email_address)s, %(is_email_verified)s, %(is_expert)s, %(twitter_id)s, %(facebook_id)s, %(linkedin_id)s, %(slack_id)s, %(skype_id)s, %(irc_id)s, %(name)s, %(city)s, %(country)s, %(picture_url)s, %(gender)s, %(self_description_gender)s, %(default_editor)s, %(mentions_notifications)s, %(comments_notifications)s, %(projects_notifications)s, %(date_registered)s, %(last_validation_date)s)]
[parameters: {'id': 1234, 'validation_message': True, 'username': 'Thinkwhere TEST', 'role': 0, 'mapping_level': 1, 'tasks_mapped': 0, 'tasks_validated': 0, 'tasks_invalidated': 0, 'projects_mapped': None, 'email_address': None, 'is_email_verified': False, 'is_expert': False, 'twitter_id': None, 'facebook_id': None, 'linkedin_id': None, 'slack_id': None, 'skype_id': None, 'irc_id': None, 'name': None, 'city': None, 'country': None, 'picture_url': None, 'gender': None, 'self_description_gender': None, 'default_editor': 'ID', 'mentions_notifications': True, 'comments_notifications': False, 'projects_notifications': True, 'date_registered': datetime.datetime(2020, 3, 11, 14, 4, 19, 729993), 'last_validation_date': datetime.datetime(2020, 3, 11, 14, 4, 19, 730008)}]
(Background on this error at: http://sqlalche.me/e/gkpj) (Background on this error at: http://sqlalche.me/e/7s2a)
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.unit.models.dtos.test_mapping_dto.TestMappingDTO" name="test_mapped_task_with_unknown_status_raises_error" time="0.002"></testcase><testcase classname="tests.server.unit.models.dtos.test_mapping_dto.TestMappingDTO" name="test_mapped_task_with_validated_status_is_invalid" time="0.006"></testcase><testcase classname="tests.server.unit.models.dtos.test_project_dto.TestProjectDTO" name="test_project_with_unknown_mapping_type_is_invalid" time="0.004"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_cant_add_task_if_feature_geometry_is_invalid" time="0.198"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_cant_add_task_if_feature_has_missing_properties" time="0.170"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_cant_add_task_if_not_supplied_feature_type" time="0.211"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_lock_task_for_mapping_adds_locked_history" time="0.167"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_per_task_instructions_formatted_correctly" time="0.159"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_per_task_instructions_returns_instructions_when_no_dynamic_url_and_task_not_splittable" time="0.178"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_per_task_instructions_returns_instructions_with_extra_properties" time="0.274"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_per_task_instructions_with_underscores_formatted_correctly" time="0.207"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_record_auto_unlock_adds_autounlocked_action" time="0.201"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_reset_task_clears_any_existing_locks" time="0.208"></testcase><testcase classname="tests.server.unit.models.postgis.test_task.TestTask" name="test_reset_task_sets_to_ready_status" time="0.171"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_cant_create_aoi_with_invalid_multipolygon" time="0.004"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_cant_create_aoi_with_non_multipolygon_type" time="0.004"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_feature_collection_multi_polygon_with_zcoord_dissolve" time="0.003"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_feature_collection_multi_polygon_with_zcoord_nodissolve" time="0.003"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_feature_collection_to_multi_polygon_dissolve" time="0.010"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_feature_collection_to_multi_polygon_nodissolve" time="0.007"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_raises_InvalidGeoJson_when_geometry_is_linestring" time="0.018"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_tasks_from_aoi_features" time="0.007"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_trim_grid_to_aoi_clip" time="0.062"></testcase><testcase classname="tests.server.unit.services.grid.test_grid_service.TestGridService" name="test_trim_grid_to_aoi_noclip" time="0.067"></testcase><testcase classname="tests.server.unit.services.messaging.test_messaging_service.TestMessagingService" name="test_message_service_generates_correct_chat_link" time="0.001"></testcase><testcase classname="tests.server.unit.services.messaging.test_messaging_service.TestMessagingService" name="test_message_service_generates_correct_task_link" time="0.001"></testcase><testcase classname="tests.server.unit.services.messaging.test_messaging_service.TestMessagingService" name="test_message_service_identifies_all_users" time="0.001"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_can_parse_email_verification_token" time="0.210"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_get_authentication_failed_url_returns_expected_url" time="0.184"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_if_user_create_called_if_user_not_found" time="0.210"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_if_user_get_called_with_osm_id" time="0.205"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_unable_to_find_user_in_osm_response_raises_error" time="0.177"></testcase><testcase classname="tests.server.unit.services.users.test_authentication_service.TestAuthenticationService" name="test_valid_auth_request_gets_token" time="0.182"></testcase><testcase classname="tests.server.unit.services.users.test_osm_service.TestOSMService" name="test_osm_service_can_parse_oms_user_details_xml" time="0.001"></testcase><testcase classname="tests.server.unit.services.users.test_osm_service.TestOSMService" name="test_osm_service_raise_error_if_user_element_not_found" time="0.005"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_admin_role_is_recognized_as_a_validator" time="0.002"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_mapper_role_is_not_recognized_as_a_validator" time="0.001"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_pm_not_allowed_to_add_admin_role_when_setting_role" time="0.011"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_unknown_level_raise_error_when_setting_level" time="0.004"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_unknown_role_raise_error_when_setting_role" time="0.007"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_user_correctly_identified_as_pm" time="0.001"></testcase><testcase classname="tests.server.unit.services.users.test_user_service.TestUserService" name="test_user_not_identified_as_pm" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_cant_unlock_a_task_you_dont_own" time="0.178"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_get_task_raises_error_if_task_not_found" time="0.167"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_if_new_state_not_acceptable_raise_error" time="0.178"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_lock_task_for_mapping_raises_error_if_task_in_invalid_state" time="0.181"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_lock_task_for_mapping_raises_error_if_user_already_has_locked_task" time="0.184"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_lock_task_for_mapping_raises_error_if_user_has_not_accepted_license" time="0.185"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_task_is_not_undoable_if_last_change_not_made_by_you" time="0.180"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_task_is_undoable_if_last_change_made_by_you" time="0.176"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_unlock_of_not_locked_for_mapping_raises_error" time="0.187"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_unlock_with_comment_sets_history" time="0.365"></testcase><testcase classname="tests.server.unit.services.test_mapping_service.TestMappingService" name="test_unlock_with_status_change_sets_history" time="0.180"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_attempting_to_attach_non_existant_license_raise_error" time="0.177"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_cant_add_tasks_if_geojson_not_feature_collection" time="0.189"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_complete_default_locale_raises_is_valid" time="0.175"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_get_raises_error_if_not_found" time="0.175"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_no_project_info_for_default_locale_raises_error" time="0.202"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_published_project_with_incomplete_default_locale_raises_error" time="0.197"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_reset_all_tasks" time="0.207"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_updating_a_private_project_with_no_allowed_users_causes_an_error" time="0.187"></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_updating_a_project_with_different_roles" time="0.182"><error type="builtins.ValueError" message="Project can only be updated by admins or by the owner&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;server: INFO: Starting up a new Tasking Manager application&#10;server: DEBUG: Connecting to the databse&#10;server: DEBUG: Initialising frontend routes&#10;server: DEBUG: Adding routes to API endpoints&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 628, in run
    testMethod()
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py", line 1255, in patched
    return func(*args, **keywargs)
  File "/Users/ramyaragupathy/Github/tasking-manager/tests/server/unit/services/test_project_admin_service.py", line 162, in test_updating_a_project_with_different_roles
    ProjectAdminService.update_project(dto, mock_user.id)
  File "/Users/ramyaragupathy/Github/tasking-manager/server/services/project_admin_service.py", line 136, in update_project
    raise ValueError("Project can only be updated by admins or by the owner")
Project can only be updated by admins or by the owner
-------------------- >> begin captured logging << --------------------
server: INFO: Starting up a new Tasking Manager application
server: DEBUG: Connecting to the databse
server: DEBUG: Initialising frontend routes
server: DEBUG: Adding routes to API endpoints
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.server.unit.services.test_project_admin_service.TestProjectAdminService" name="test_valid_geo_json_attaches_task_to_project" time="0.185"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_project_service_raises_error_if_project_not_found" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_cant_map_if_project_not_published" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_is_allowed_to_map_if_level_enforced" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_not_allowed_to_map_if_level_enforced" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_not_permitted_to_map_if_already_locked_tasks" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_not_permitted_to_map_if_user_has_not_accepted_license" time="0.002"></testcase><testcase classname="tests.server.unit.services.test_project_service.TestProjectService" name="test_user_not_permitted_to_map_if_user_is_blocked" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_same_state_keeps_counter" time="0.000"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_tasks_state_representation" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_flagging_bad_imagery" time="0.000"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_invalidating_bad_imagery_task_sets_counters_correctly" time="0.000"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_invalidating_mapped_task_sets_counters_correctly" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_invalidating_validated_task_sets_counters_correctly" time="0.001"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_mapping_increments_counter" time="0.000"></testcase><testcase classname="tests.server.unit.services.test_stats_service.TestStatsService" name="test_update_after_validating_increments_counter" time="0.000"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_lock_tasks_for_validation_raises_error_if_task_not_found" time="0.179"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_lock_tasks_for_validation_raises_error_if_task_not_mapped" time="0.376"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_lock_tasks_raises_error_if_project_validator_only_and_user_not_validator" time="0.203"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_lock_tasks_raises_error_if_user_has_not_accepted_license" time="0.196"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_unlock_tasks_for_validation_raises_error_if_task_not_done_or_validated" time="0.225"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_unlock_tasks_for_validation_raises_error_if_task_not_found" time="0.176"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_unlock_tasks_for_validation_raises_error_if_task_not_locked" time="0.195"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_unlock_tasks_for_validation_raises_error_if_user_doesnt_own_the_lock" time="0.209"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_user_can_validate_task_returns_false_when_user_not_a_pm_and_validating_own_task" time="0.230"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_user_can_validate_task_returns_true_when_user_a_pm_and_not_validating_own_task" time="0.211"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_user_can_validate_task_returns_true_when_user_a_pm_and_validating_own_task" time="0.227"></testcase><testcase classname="tests.server.unit.services.test_validator_service.TestValidatorService" name="test_user_can_validate_task_returns_true_when_user_not_a_pm_and_not_validating_own_task" time="0.193"></testcase><testcase classname="nose.failure.Failure" name="runTest" time="0.000"><error type="builtins.OSError" message="No such file /Users/ramyaragupathy/Github/tasking-manager/unit/services/test_project_admin_service.py-"><![CDATA[Traceback (most recent call last):
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py", line 628, in run
    testMethod()
  File "/Users/ramyaragupathy/Github/tasking-manager/venv/lib/python3.7/site-packages/nose/failure.py", line 42, in runTest
    raise self.exc_class(self.exc_val)
OSError: No such file /Users/ramyaragupathy/Github/tasking-manager/unit/services/test_project_admin_service.py-
]]></error></testcase></testsuite>